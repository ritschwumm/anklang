# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0

# Linting: xclip -sel c <.github/workflows/testing.yml # https://rhysd.github.io/actionlint/

on:
  push:
    branches: ['trunk', 'next', 'wip/**']
  pull_request:
    branches: ['trunk', 'next']

jobs:

  Ubuntu-Artifacts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: ghcache
      with:
        path: ~/ghcache/
        key: ${{ runner.os }}-Ubuntu-${{ hashFiles ('misc/Dockerfile.focal', 'misc/dbuild.sh') }}
    - name: Load Docker Cache
      if: ${{ steps.ghcache.outputs.cache-hit == 'true' }}
      run: |
        test ! -r ~/ghcache/anklang-focal.tar || docker load -i ~/ghcache/anklang-focal.tar
    - name: Project Version
      run: |
        misc/version.sh
    - name: Select Clang
      run: |
        echo -e 'CC=clang\n' 'CXX=clang++' > config-defaults.mk
    - name: Prepare Ubuntu
      run: |
        misc/dbuild.sh -f focal misc/version.sh
    - name: Build Ubuntu
      run: |
        misc/dbuild.sh -f focal make -j`nproc` all pdf
    - name: Test Ubuntu
      run: |
        misc/dbuild.sh -f focal make check
        misc/dbuild.sh -f focal make install DESTDIR=inst
        misc/dbuild.sh -f focal cp -a inst/usr/local/share/doc/anklang/ out/anklang-docs/
    - name: Save Docker Cache
      if: ${{ steps.ghcache.outputs.cache-hit != 'true' }}
      run: |
        mkdir -p ~/ghcache/
        docker save anklang-focal -o ~/ghcache/anklang-focal.tar
        ls -al ~/ghcache/
    - uses: actions/upload-artifact@v3
      with:
        name: docs
        path: |
          out/anklang-docs/
    - name: End-to-end X11 Tests
      run: |
        misc/dbuild.sh -f focal make x11test-v
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: x11test
        path: out/x11test/

  Arch-Docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: ghcache
      with:
        path: ~/ghcache/
        key: ${{ runner.os }}-Arch-${{ hashFiles ('misc/Dockerfile.arch', 'misc/dbuild.sh') }}
    - name: Load Docker Cache
      if: ${{ steps.ghcache.outputs.cache-hit == 'true' }}
      run: |
        test ! -r ~/ghcache/anklang-arch.tar || docker load -i ~/ghcache/anklang-arch.tar
    - name: Prepare Arch
      run: |
        misc/dbuild.sh -f arch misc/version.sh
    - name: Build Arch
      run: |
        misc/dbuild.sh -f arch make -j`nproc`
    - name: Test Arch
      run: |
        misc/dbuild.sh -f arch make check
    - name: Save Docker Cache
      if: ${{ steps.ghcache.outputs.cache-hit != 'true' }}
      run: |
        mkdir -p ~/ghcache/
        docker save anklang-arch -o ~/ghcache/anklang-arch.tar
        ls -al ~/ghcache/
    - name: Upload docs/anklang/
      if: github.ref == 'refs/heads/trunk'
      env:
        SSH_ID_GHDOCS4ANKLANG_ECDSA: ${{ secrets.SSH_ID_GHDOCS4ANKLANG_ECDSA }}
      run: |
        echo "$SSH_ID_GHDOCS4ANKLANG_ECDSA" > .git/.ssh_id_ghdocs4anklang && chmod 0600 .git/.ssh_id_ghdocs4anklang
        misc/dbuild.sh -f arch doc/poxy.sh -b -u

  Ping-IRC:
    if: always()
    needs: [Ubuntu-Artifacts, Arch-Docs]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check Jobs
      run: |
        echo '${{ needs.Ubuntu-Artifacts.result }}' '${{ needs.Arch-Docs.result }}'
        test success = '${{ needs.Ubuntu-Artifacts.result }}'
        test success = '${{ needs.Arch-Docs.result }}'
    - name: Ping IRC
      if: always()
      run: |
        R='${{ github.repository }}' && R=${R#*/}
        B='${{ github.ref }}' && B=${B#refs/heads/}
        S='${{ job.status }}' && URL='${{ github.event.head_commit.url }}'
        U='${{ github.actor }}' && B="$(git branch --show-current)"
        MSG=$(git log -1 --format='%s')
        .github/workflows/ircbot.py -q -j "#Anklang" -R "$R" -U "$U" -D "$B" -S "$S" "$MSG" "$URL"
