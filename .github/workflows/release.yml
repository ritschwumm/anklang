# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0

# Linting: xclip -sel c <.github/workflows/release.yml # https://rhysd.github.io/actionlint/

name: Release-Tag
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:

  Focal-Release-Upload:
    runs-on: ubuntu-latest
    env: # INTERACTIVE: docker run -i --cap-add SYS_PTRACE -v $PWD:/anklang ...
      RUN: docker run -v /home/runner/work/anklang/anklang:/anklang -w /anklang/ -t --rm cifocal
    steps:
    # Checkout and fix actions/checkout messing up annotation of the fetched tag: actions/checkout#290
    - uses: actions/checkout@v4
      with: { fetch-depth: 0, show-progress: false }
    - run: git fetch -f --tags
    # Docker build - use BuildKit and Github action API for reliable caching
    - uses: docker/setup-buildx-action@v2.10.0
    - run: docker buildx create --use --driver=docker-container # multi-platform, exports cache, needs --load
    - uses: docker/build-push-action@v4
      with: # docker build -t cifocal:latest -f misc/Dockerfile.focal misc
        tags: cifocal:latest
        file: misc/Dockerfile.focal
        context: misc/
        cache-from: type=gha
        cache-to:   type=gha,mode=max
        load: true
    # Configure Build
    - name: Configure Build
      id: tagcheck
      run: |
        git describe --tags --exact-match
        misc/version.sh
        echo "ISPRERELEASE=$(test tag != $(git cat-file -t $GITHUB_REF_NAME) && echo true || echo false)" | tee -a "$GITHUB_OUTPUT"
        git cat-file -t $GITHUB_REF_NAME
        $RUN sudo chown ubuntu:ubuntu -R /anklang/	# gh-runner $UID != 1000
        $RUN misc/version.sh
        $RUN c++ --version
    # Build Assets
    - name: Build Assets
      run: |
        $RUN misc/mkassets.sh
        $RUN sudo chown `id -u`:`id -g` -R /anklang/	# Restore gh-runner $UID
    # Release Upload
    - name: Release Upload
      id: ghrelease
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path:  assets.txt
        files:      assets/*
        prerelease: ${{ steps.tagcheck.outputs.ISPRERELEASE }}
        draft:      true
    - name: Release Info
      run: |
        echo URL: ${{ steps.ghrelease.outputs.url }}

  Ping-IRC:
    if: always()
    needs: [Release-Build-and-Upload]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check Jobs
      run: |
        echo '${{ needs.Release-Build-and-Upload.result }}'
        test success = '${{ needs.Release-Build-and-Upload.result }}'
    - name: Ping IRC
      if: always()
      run: |
        R='${{ github.repository }}' && R=${R#*/}
        B='${{ github.ref }}' && B=${B#refs/heads/}
        S='${{ job.status }}' && URL='${{ github.event.head_commit.url }}'
        U='${{ github.actor }}' && B="$(git branch --show-current)"
        MSG=$(git log -1 --format='%s')
        .github/workflows/ircbot.py -q -j "#Anklang" -R "$R" -U "$U" -D "$B" -S "$S" "$MSG" "$URL"
