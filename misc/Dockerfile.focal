# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0

# == Distribution preparation ==
FROM ubuntu:20.04
ENV DEBIAN_FRONTEND noninteractive

# Use BASH(1) as shell, affects the RUN commands below
RUN ln -sf bash /bin/sh && ls -al /bin/sh

# Save +615MB by skipping TeX
ARG NOTEX

# Upgrade packages, install dependencies, clean up to shrink Docker image
# Add libXss.so, libgtk-3-0 for Electron
RUN apt-get update \
  && apt-get -y upgrade \
  && apt-get install -y \
	     sudo build-essential curl cmake libglib2.0-dev \
	     build-essential pkg-config git curl ccache curl unzip gawk g++ \
	     clang clang-tidy clang-tools castxml cppcheck libboost-system-dev \
	     imagemagick libxml2-utils libxml2-dev python3 python3-lxml \
	     python3-pandocfilters pandoc graphviz universal-ctags \
	     libasound2-dev libflac-dev libvorbis-dev libmad0-dev libjack-dev libzstd-dev \
	     gettext libgconf-2-4 libgtk2.0-dev libgtk-3-dev squashfs-tools zstd \
	     libgtk-3-0 libxss1 libgbm1 libnss3 \
	     xvfb 9wm ffmpeg \
  && (test "${NOTEX:-false}" = true \
	|| apt-get install -y \
		   texlive-xetex fonts-sil-charis texlive-binaries texlive-fonts-extra ) \
  && curl -sL https://deb.nodesource.com/setup_16.x | bash - \
  && apt-get install -y nodejs \
  && apt-get clean

# Build stripped down Fluidsynth version without drivers (not needed atm)
RUN exit 0 && \
  mkdir -p /tmp/fluid/build && cd /tmp/fluid/ && \
  curl -sfSOL https://github.com/FluidSynth/fluidsynth/archive/v2.2.1.tar.gz && \
  tar xf v2.2.1.tar.gz && rm v2.2.1.tar.gz && cd build && \
  cmake ../fluidsynth-2.2.1 \
	-DCMAKE_INSTALL_PREFIX=/usr/ \
	-DLIB_SUFFIX="/`dpkg-architecture -qDEB_HOST_MULTIARCH`" \
	-Denable-libsndfile=1 \
	-Denable-dbus=0 \
	-Denable-ipv6=0 \
	-Denable-jack=0 \
	-Denable-midishare=0 \
	-Denable-network=0 \
	-Denable-oss=0 \
	-Denable-pulseaudio=0 \
	-Denable-readline=0 \
	-Denable-alsa=0 \
	-Denable-lash=0 && \
  make && make install

# Provide out-of-tree build directory (possible Docker volume mount point)
RUN mkdir /ootbuild/
ENV OOTBUILD /ootbuild/

# Become non-root, USERGROUP determines ids for Docker volumes
ARG USERGROUP
RUN groupadd --gid ${USERGROUP#*:} builder \
  && useradd --uid ${USERGROUP%:*} --gid ${USERGROUP#*:} --create-home --shell /bin/bash builder \
  && echo "builder ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/builder \
  && chown -R ${USERGROUP} /ootbuild/
USER builder
